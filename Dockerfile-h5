# Use Ubuntu 22.04 (Jammy) as the base image
FROM ubuntu:22.04

# Update package lists and install necessary dependencies
RUN apt-get update && \
    apt-get install -y zip bison build-essential cmake flex git libedit-dev \
                       libllvm14 llvm-14-dev libclang-14-dev python3 zlib1g-dev \
                       libelf-dev libfl-dev python3-setuptools liblzma-dev \
                       libdebuginfod-dev arping netperf iperf  \
                       luajit luajit-5.1-dev

RUN apt-get install -y wget nano tree iputils-ping iproute2 net-tools 

RUN apt-get install -y openssh-server openssh-client sshpass

RUN apt-get install -y linux-headers-$(uname -r)

RUN apt-get install -y sudo file

# Clone BCC repository and build
RUN git clone https://github.com/iovisor/bcc.git && \
    cd bcc && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make && \
    make install && \
    cmake -DPYTHON_CMD=python3 .. && \
    cd src/python/ && \
    make && \
    make install && \
    cd ../..

RUN git clone --recurse-submodules https://github.com/libbpf/bpftool.git /home/GIT/bpftool/ && \
    cd /home/GIT/bpftool/src/ && \
    make && \
    make install

RUN apt-get install -y python3 python3-pip


# RUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /bcc

# Set environment variables
ENV PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"


# Add a script to mount tracefs and execute your Python script
COPY entrypoint.sh /home/entrypoint.sh
COPY hello_world.py /home/hello_world.py
COPY hello.py /home/hello.py
COPY Antelope/  /home/GIT/Antelope/

RUN cd /home/GIT/Antelope/ && \
    pip3 install -r requirements.txt

# Clean up unnecessary packages and files
RUN apt-get autoremove -y && \
    apt-get clean

RUN chmod +x /home/entrypoint.sh

RUN apt-get install -y netcat

RUN apt-get install -y clang

RUN apt-get install -y linux-headers-$(uname -r)

# removinf linking erros
RUN ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/asm
RUN ln -s /usr/include/x86_64-linux-gnu/gnu /usr/include/gnu
RUN ln -s /usr/include/x86_64-linux-gnu/sys /usr/include/sys
RUN ln -s /usr/include/x86_64-linux-gnu/bits /usr/include/bits  

# RUN cp stubs-64.h stubs-32.h (linking error)
RUN cp /usr/include/x86_64-linux-gnu/gnu/stubs-64.h /usr/include/gnu/stubs-32.h

RUN apt-get install -y libbpf-dev libc6-dev

COPY small_file.txt /home/out.txt

# Search for bpf_sock_ops and look for an enum containing BPF_SOCK_OPS_ACTIVE_ESTABLISHED_CB (around line 5825) variable. Add the new enum variables as listed below.
# change the bpf.h file resided in /usr/include/linux/bpf.h
# add the follwing lines to the bpf.h file
# BPF_SOCK_OPS_TCP_ACK_CB,
# BPF_SOCK_OPS_TCL_CLOSE_CB,
# BPF_BBR_ENTER,

# If you are running antelope on docker environment then remove sudo from the load.sh file

# Default command
# CMD ["/bin/bash"]
CMD ["/home/entrypoint.sh"]

# Compile , run , stop containers
# sudo docker build -t bcc-docker .
# sudo docker run -it --privileged  bcc-docker
# sudo docker ps -aq | xargs sudo docker stop


# delete images ,erase data , show images
# sudo docker rmi -f $(sudo docker images -q)
# sudo docker system prune -a
# sudo docker images
